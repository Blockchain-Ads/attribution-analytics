{"version":3,"file":"index.js","sources":["../src/index.js"],"sourcesContent":["import { nanoid } from \"nanoid\";\nimport axios from \"axios\";\n\nconst cookieName = \"BCA-universal-cookie\";\n\nfunction getIP() {\n  return axios.get('https://www.cloudflare.com/cdn-cgi/trace')\n    .then(function(response) {\n      const data = response.data;\n      const ipRegex = /[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}/\n      const ip = data.match(ipRegex)[0];\n      return ip\n    })\n    .catch(function(error) {\n      // handle error\n      console.log(error);\n    })\n}\n\nexport async function bcaWeb3Connect() {\n  const uuid = '';\n  // const id5Status = await ID5.init({ partnerId: 1238 })\n  // const getUserId = id5Status.onAvailable((status: any) => {return status.getUserId()})\n  // const promisePackage = [getIP(), nanoid(32)]\n  const promisePackage = [ nanoid(32)]\n\n\n\n  Promise.all(promisePackage)\n    .then(res => console.log('success', res))\n    .catch(err => console.log('error', err))\n  return '';\n}\n\nexport default {\n  bcaWeb3Connect,\n};\n"],"names":["bcaWeb3Connect","promisePackage","nanoid","Promise","all","then","res","console","log","err","resolve","e","reject"],"mappings":"yCAmBsBA,IAAAA,EAAAA,eACpB,IAIMC,EAAiB,CAAEC,EAAMA,OAAC,KAOhC,OAHAC,QAAQC,IAAIH,GACTI,KAAK,SAAAC,GAAOC,OAAAA,QAAQC,IAAI,UAAWF,EAAI,GAAC,MAClC,SAAAG,GAAG,OAAWF,QAACC,IAAI,QAASC,EAAI,GAClCN,QAAAO,QAAA,GACR,CAAA,MAAAC,GAAA,OAAAR,QAAAS,OAAAD,EAAA,CAAA,IAEc,CACbX,eAAAA"}